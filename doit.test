#!/usr/bin/perl
#
use strict;
use warnings;

my $debug_level = shift @ARGV || 0;
my $prog        = shift @ARGV || "test_cordic";
my $other_args  = join( " ", @ARGV );

my $opt = ($debug_level <= 0) ? "3" : "0";

my $CFLAGS = "-std=c++17 -Wextra -Wstrict-aliasing -pedantic -Werror -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wmissing-include-dirs -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-promo -Wstrict-overflow=5 -Wswitch-default -Wundef -O${opt} -g -DDEBUG_LEVEL=${debug_level}";
`uname` !~ /Darwin/ and $CFLAGS .= " -Wlogical-op -Wstrict-null-sentinel";
`uname` =~ /Darwin/ and $CFLAGS .= " -Wno-unused-parameter -Wno-shift-negative-value -Wno-c++14-binary-literal -ferror-limit=10 -DNO_FMT_LLU";

system( "rm -f ${prog}.o ${prog} Cordic.o" );
system( "g++ -g -o ${prog}.o ${CFLAGS} -c ${prog}.cpp" ) == 0 or die "ERROR: compile failed\n";
system( "g++ -g -o Cordic.o ${CFLAGS} -c Cordic.cpp" ) == 0 or die "ERROR: compile failed\n";
system( "g++ -g -o ${prog} ${prog}.o Cordic.o -lm" ) == 0 or die "ERROR: link failed\n";
my $cmd = "./${prog} ${other_args}";
print "$cmd\n";
if ( system( $cmd ) != 0 ) {
    die "ERROR: run failed\n";
}
exit 0;
